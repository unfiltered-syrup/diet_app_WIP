{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jaden\\\\Desktop\\\\untitled_diet_app\\\\app\\\\src\\\\components\\\\LoginPage.tsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//create react component for login form\nfunction LoginPage(_ref) {\n  _s();\n  let {\n    onLogin\n  } = _ref;\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    fetch('http://localhost:5000/login', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        password\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.success == 'True') {\n        console.log('navigating...');\n        onLogin('true');\n        navigate(\"/\", {\n          state: {\n            isLoggedIn: 'true'\n          }\n        });\n      } else {\n        alert('Incorrect username or password');\n        navigate(\"/login\", {\n          state: {\n            isLoggedIn: 'false'\n          }\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"sm:text-lg md:text-xl lg:2xl \",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"w-full max-w-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:flex md:items-center mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"OnrWeXlZCx/nWsUKnK4eDaaR0T4=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["useNavigate","useState","jsxDEV","_jsxDEV","LoginPage","_ref","_s","onLogin","navigate","name","setName","password","setPassword","handleSubmit","e","preventDefault","fetch","method","credentials","headers","body","JSON","stringify","then","response","json","data","success","console","log","state","isLoggedIn","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/jaden/Desktop/untitled_diet_app/app/src/components/LoginPage.tsx"],"sourcesContent":["import { Outlet, Link, useNavigate, useLocation} from \"react-router-dom\";\r\nimport { useState } from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\ninterface LoginPageProps {\r\n  onLogin: (isLoggedIn: string | undefined) => void;\r\n}\r\n\r\n//create react component for login form\r\nfunction LoginPage({onLogin}: LoginPageProps){\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    fetch('http://localhost:5000/login', {\r\n      method: 'POST',\r\n      credentials: 'include',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({name, password}),\r\n        })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          if(data.success == 'True'){\r\n            console.log('navigating...');\r\n            onLogin('true');\r\n            navigate(\"/\", {state: {isLoggedIn: 'true'}});\r\n          }\r\n          else{\r\n            alert('Incorrect username or password')\r\n            navigate(\"/login\", {state: {isLoggedIn: 'false'}});\r\n          }\r\n        });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"sm:text-lg md:text-xl lg:2xl \">Login</h1>\r\n      <form onSubmit={handleSubmit} className=\"w-full max-w-sm\">\r\n        <div className=\"md:flex md:items-center mb-6\">\r\n        <label>\r\n          Username:\r\n          <input\r\n          type=\"text\" \r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        </label>\r\n        <label>\r\n          Password:\r\n          <input\r\n          type=\"text\" \r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        </label>\r\n        <input type=\"submit\" value=\"Submit\" />\r\n        </div>\r\n      </form>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default LoginPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}